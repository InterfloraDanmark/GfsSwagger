<?php
/**
 * OrderMessage
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * OrderMessage Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderMessage implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OrderMessage';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'delivery_date' => '\DateTime',
        'sending_unit_order_number' => 'string',
        'order_type' => 'int',
        'order_state' => 'int',
        'occasion' => 'int',
        'sender_company' => 'string',
        'sender_name' => 'string',
        'sender_address' => 'string',
        'sender_city' => 'string',
        'sender_region' => 'string',
        'sender_postal_code' => 'string',
        'sender_country_code' => 'string',
        'sender_phone_home' => 'string',
        'sender_phone_work' => 'string',
        'sender_phone_mobile' => 'string',
        'sender_fax' => 'string',
        'sender_email1' => 'string',
        'sender_email2' => 'string',
        'recipient_title' => 'string',
        'recipient_name' => 'string',
        'recipient_address' => 'string',
        'recipient_city' => 'string',
        'recipient_region' => 'string',
        'recipient_postal_code' => 'string',
        'recipient_country_code' => 'string',
        'recipient_phone_home' => 'string',
        'recipient_phone_work' => 'string',
        'recipient_phone_mobile' => 'string',
        'recipient_fax' => 'string',
        'recipient_email' => 'string',
        'total_order_value' => 'double',
        'order_instructions' => 'string',
        'sending_member_code' => 'string',
        'sending_location' => 'string',
        'sending_name' => 'string',
        'sending_member_order_number' => 'string',
        'filling_member_code' => 'string',
        'filling_name' => 'string',
        'filling_location' => 'string',
        'clearing_period' => 'string',
        'order_items' => '\Swagger\Client\Model\OrderItem[]',
        'floristgate_number' => 'int',
        'message_status' => 'int',
        'created_date' => '\DateTime',
        'modified_date' => '\DateTime',
        'confirmed_date' => '\DateTime',
        'from_unit_id' => 'int',
        'from_unit_message_id' => 'int',
        'to_unit_id' => 'int',
        'to_unit_message_id' => 'int',
        'operator' => 'string',
        'priority' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'delivery_date' => 'date-time',
        'sending_unit_order_number' => null,
        'order_type' => 'int32',
        'order_state' => 'int32',
        'occasion' => 'int32',
        'sender_company' => null,
        'sender_name' => null,
        'sender_address' => null,
        'sender_city' => null,
        'sender_region' => null,
        'sender_postal_code' => null,
        'sender_country_code' => null,
        'sender_phone_home' => null,
        'sender_phone_work' => null,
        'sender_phone_mobile' => null,
        'sender_fax' => null,
        'sender_email1' => null,
        'sender_email2' => null,
        'recipient_title' => null,
        'recipient_name' => null,
        'recipient_address' => null,
        'recipient_city' => null,
        'recipient_region' => null,
        'recipient_postal_code' => null,
        'recipient_country_code' => null,
        'recipient_phone_home' => null,
        'recipient_phone_work' => null,
        'recipient_phone_mobile' => null,
        'recipient_fax' => null,
        'recipient_email' => null,
        'total_order_value' => 'double',
        'order_instructions' => null,
        'sending_member_code' => null,
        'sending_location' => null,
        'sending_name' => null,
        'sending_member_order_number' => null,
        'filling_member_code' => null,
        'filling_name' => null,
        'filling_location' => null,
        'clearing_period' => null,
        'order_items' => null,
        'floristgate_number' => 'int32',
        'message_status' => 'int32',
        'created_date' => 'date-time',
        'modified_date' => 'date-time',
        'confirmed_date' => 'date-time',
        'from_unit_id' => 'int32',
        'from_unit_message_id' => 'int32',
        'to_unit_id' => 'int32',
        'to_unit_message_id' => 'int32',
        'operator' => null,
        'priority' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'delivery_date' => 'DeliveryDate',
        'sending_unit_order_number' => 'SendingUnitOrderNumber',
        'order_type' => 'OrderType',
        'order_state' => 'OrderState',
        'occasion' => 'Occasion',
        'sender_company' => 'SenderCompany',
        'sender_name' => 'SenderName',
        'sender_address' => 'SenderAddress',
        'sender_city' => 'SenderCity',
        'sender_region' => 'SenderRegion',
        'sender_postal_code' => 'SenderPostalCode',
        'sender_country_code' => 'SenderCountryCode',
        'sender_phone_home' => 'SenderPhoneHome',
        'sender_phone_work' => 'SenderPhoneWork',
        'sender_phone_mobile' => 'SenderPhoneMobile',
        'sender_fax' => 'SenderFax',
        'sender_email1' => 'SenderEmail1',
        'sender_email2' => 'SenderEmail2',
        'recipient_title' => 'RecipientTitle',
        'recipient_name' => 'RecipientName',
        'recipient_address' => 'RecipientAddress',
        'recipient_city' => 'RecipientCity',
        'recipient_region' => 'RecipientRegion',
        'recipient_postal_code' => 'RecipientPostalCode',
        'recipient_country_code' => 'RecipientCountryCode',
        'recipient_phone_home' => 'RecipientPhoneHome',
        'recipient_phone_work' => 'RecipientPhoneWork',
        'recipient_phone_mobile' => 'RecipientPhoneMobile',
        'recipient_fax' => 'RecipientFax',
        'recipient_email' => 'RecipientEmail',
        'total_order_value' => 'TotalOrderValue',
        'order_instructions' => 'OrderInstructions',
        'sending_member_code' => 'SendingMemberCode',
        'sending_location' => 'SendingLocation',
        'sending_name' => 'SendingName',
        'sending_member_order_number' => 'SendingMemberOrderNumber',
        'filling_member_code' => 'FillingMemberCode',
        'filling_name' => 'FillingName',
        'filling_location' => 'FillingLocation',
        'clearing_period' => 'ClearingPeriod',
        'order_items' => 'OrderItems',
        'floristgate_number' => 'FloristgateNumber',
        'message_status' => 'MessageStatus',
        'created_date' => 'CreatedDate',
        'modified_date' => 'ModifiedDate',
        'confirmed_date' => 'ConfirmedDate',
        'from_unit_id' => 'FromUnitID',
        'from_unit_message_id' => 'FromUnitMessageID',
        'to_unit_id' => 'ToUnitID',
        'to_unit_message_id' => 'ToUnitMessageID',
        'operator' => 'Operator',
        'priority' => 'Priority'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'delivery_date' => 'setDeliveryDate',
        'sending_unit_order_number' => 'setSendingUnitOrderNumber',
        'order_type' => 'setOrderType',
        'order_state' => 'setOrderState',
        'occasion' => 'setOccasion',
        'sender_company' => 'setSenderCompany',
        'sender_name' => 'setSenderName',
        'sender_address' => 'setSenderAddress',
        'sender_city' => 'setSenderCity',
        'sender_region' => 'setSenderRegion',
        'sender_postal_code' => 'setSenderPostalCode',
        'sender_country_code' => 'setSenderCountryCode',
        'sender_phone_home' => 'setSenderPhoneHome',
        'sender_phone_work' => 'setSenderPhoneWork',
        'sender_phone_mobile' => 'setSenderPhoneMobile',
        'sender_fax' => 'setSenderFax',
        'sender_email1' => 'setSenderEmail1',
        'sender_email2' => 'setSenderEmail2',
        'recipient_title' => 'setRecipientTitle',
        'recipient_name' => 'setRecipientName',
        'recipient_address' => 'setRecipientAddress',
        'recipient_city' => 'setRecipientCity',
        'recipient_region' => 'setRecipientRegion',
        'recipient_postal_code' => 'setRecipientPostalCode',
        'recipient_country_code' => 'setRecipientCountryCode',
        'recipient_phone_home' => 'setRecipientPhoneHome',
        'recipient_phone_work' => 'setRecipientPhoneWork',
        'recipient_phone_mobile' => 'setRecipientPhoneMobile',
        'recipient_fax' => 'setRecipientFax',
        'recipient_email' => 'setRecipientEmail',
        'total_order_value' => 'setTotalOrderValue',
        'order_instructions' => 'setOrderInstructions',
        'sending_member_code' => 'setSendingMemberCode',
        'sending_location' => 'setSendingLocation',
        'sending_name' => 'setSendingName',
        'sending_member_order_number' => 'setSendingMemberOrderNumber',
        'filling_member_code' => 'setFillingMemberCode',
        'filling_name' => 'setFillingName',
        'filling_location' => 'setFillingLocation',
        'clearing_period' => 'setClearingPeriod',
        'order_items' => 'setOrderItems',
        'floristgate_number' => 'setFloristgateNumber',
        'message_status' => 'setMessageStatus',
        'created_date' => 'setCreatedDate',
        'modified_date' => 'setModifiedDate',
        'confirmed_date' => 'setConfirmedDate',
        'from_unit_id' => 'setFromUnitId',
        'from_unit_message_id' => 'setFromUnitMessageId',
        'to_unit_id' => 'setToUnitId',
        'to_unit_message_id' => 'setToUnitMessageId',
        'operator' => 'setOperator',
        'priority' => 'setPriority'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'delivery_date' => 'getDeliveryDate',
        'sending_unit_order_number' => 'getSendingUnitOrderNumber',
        'order_type' => 'getOrderType',
        'order_state' => 'getOrderState',
        'occasion' => 'getOccasion',
        'sender_company' => 'getSenderCompany',
        'sender_name' => 'getSenderName',
        'sender_address' => 'getSenderAddress',
        'sender_city' => 'getSenderCity',
        'sender_region' => 'getSenderRegion',
        'sender_postal_code' => 'getSenderPostalCode',
        'sender_country_code' => 'getSenderCountryCode',
        'sender_phone_home' => 'getSenderPhoneHome',
        'sender_phone_work' => 'getSenderPhoneWork',
        'sender_phone_mobile' => 'getSenderPhoneMobile',
        'sender_fax' => 'getSenderFax',
        'sender_email1' => 'getSenderEmail1',
        'sender_email2' => 'getSenderEmail2',
        'recipient_title' => 'getRecipientTitle',
        'recipient_name' => 'getRecipientName',
        'recipient_address' => 'getRecipientAddress',
        'recipient_city' => 'getRecipientCity',
        'recipient_region' => 'getRecipientRegion',
        'recipient_postal_code' => 'getRecipientPostalCode',
        'recipient_country_code' => 'getRecipientCountryCode',
        'recipient_phone_home' => 'getRecipientPhoneHome',
        'recipient_phone_work' => 'getRecipientPhoneWork',
        'recipient_phone_mobile' => 'getRecipientPhoneMobile',
        'recipient_fax' => 'getRecipientFax',
        'recipient_email' => 'getRecipientEmail',
        'total_order_value' => 'getTotalOrderValue',
        'order_instructions' => 'getOrderInstructions',
        'sending_member_code' => 'getSendingMemberCode',
        'sending_location' => 'getSendingLocation',
        'sending_name' => 'getSendingName',
        'sending_member_order_number' => 'getSendingMemberOrderNumber',
        'filling_member_code' => 'getFillingMemberCode',
        'filling_name' => 'getFillingName',
        'filling_location' => 'getFillingLocation',
        'clearing_period' => 'getClearingPeriod',
        'order_items' => 'getOrderItems',
        'floristgate_number' => 'getFloristgateNumber',
        'message_status' => 'getMessageStatus',
        'created_date' => 'getCreatedDate',
        'modified_date' => 'getModifiedDate',
        'confirmed_date' => 'getConfirmedDate',
        'from_unit_id' => 'getFromUnitId',
        'from_unit_message_id' => 'getFromUnitMessageId',
        'to_unit_id' => 'getToUnitId',
        'to_unit_message_id' => 'getToUnitMessageId',
        'operator' => 'getOperator',
        'priority' => 'getPriority'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const ORDER_TYPE_1 = 1;
    const ORDER_TYPE_2 = 2;
    const ORDER_STATE_1 = 1;
    const ORDER_STATE_2 = 2;
    const ORDER_STATE_3 = 3;
    const ORDER_STATE_5 = 5;
    const ORDER_STATE_8 = 8;
    const ORDER_STATE_9 = 9;
    const ORDER_STATE_14 = 14;
    const OCCASION_1 = 1;
    const OCCASION_2 = 2;
    const OCCASION_3 = 3;
    const OCCASION_4 = 4;
    const OCCASION_5 = 5;
    const OCCASION_7 = 7;
    const MESSAGE_STATUS_1 = 1;
    const MESSAGE_STATUS_2 = 2;
    const MESSAGE_STATUS_3 = 3;
    const PRIORITY_1 = 1;
    const PRIORITY_2 = 2;
    const PRIORITY_3 = 3;
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getOrderTypeAllowableValues()
    {
        return [
            self::ORDER_TYPE_1,
            self::ORDER_TYPE_2,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getOrderStateAllowableValues()
    {
        return [
            self::ORDER_STATE_1,
            self::ORDER_STATE_2,
            self::ORDER_STATE_3,
            self::ORDER_STATE_5,
            self::ORDER_STATE_8,
            self::ORDER_STATE_9,
            self::ORDER_STATE_14,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getOccasionAllowableValues()
    {
        return [
            self::OCCASION_1,
            self::OCCASION_2,
            self::OCCASION_3,
            self::OCCASION_4,
            self::OCCASION_5,
            self::OCCASION_7,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMessageStatusAllowableValues()
    {
        return [
            self::MESSAGE_STATUS_1,
            self::MESSAGE_STATUS_2,
            self::MESSAGE_STATUS_3,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPriorityAllowableValues()
    {
        return [
            self::PRIORITY_1,
            self::PRIORITY_2,
            self::PRIORITY_3,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['delivery_date'] = isset($data['delivery_date']) ? $data['delivery_date'] : null;
        $this->container['sending_unit_order_number'] = isset($data['sending_unit_order_number']) ? $data['sending_unit_order_number'] : null;
        $this->container['order_type'] = isset($data['order_type']) ? $data['order_type'] : null;
        $this->container['order_state'] = isset($data['order_state']) ? $data['order_state'] : null;
        $this->container['occasion'] = isset($data['occasion']) ? $data['occasion'] : null;
        $this->container['sender_company'] = isset($data['sender_company']) ? $data['sender_company'] : null;
        $this->container['sender_name'] = isset($data['sender_name']) ? $data['sender_name'] : null;
        $this->container['sender_address'] = isset($data['sender_address']) ? $data['sender_address'] : null;
        $this->container['sender_city'] = isset($data['sender_city']) ? $data['sender_city'] : null;
        $this->container['sender_region'] = isset($data['sender_region']) ? $data['sender_region'] : null;
        $this->container['sender_postal_code'] = isset($data['sender_postal_code']) ? $data['sender_postal_code'] : null;
        $this->container['sender_country_code'] = isset($data['sender_country_code']) ? $data['sender_country_code'] : null;
        $this->container['sender_phone_home'] = isset($data['sender_phone_home']) ? $data['sender_phone_home'] : null;
        $this->container['sender_phone_work'] = isset($data['sender_phone_work']) ? $data['sender_phone_work'] : null;
        $this->container['sender_phone_mobile'] = isset($data['sender_phone_mobile']) ? $data['sender_phone_mobile'] : null;
        $this->container['sender_fax'] = isset($data['sender_fax']) ? $data['sender_fax'] : null;
        $this->container['sender_email1'] = isset($data['sender_email1']) ? $data['sender_email1'] : null;
        $this->container['sender_email2'] = isset($data['sender_email2']) ? $data['sender_email2'] : null;
        $this->container['recipient_title'] = isset($data['recipient_title']) ? $data['recipient_title'] : null;
        $this->container['recipient_name'] = isset($data['recipient_name']) ? $data['recipient_name'] : null;
        $this->container['recipient_address'] = isset($data['recipient_address']) ? $data['recipient_address'] : null;
        $this->container['recipient_city'] = isset($data['recipient_city']) ? $data['recipient_city'] : null;
        $this->container['recipient_region'] = isset($data['recipient_region']) ? $data['recipient_region'] : null;
        $this->container['recipient_postal_code'] = isset($data['recipient_postal_code']) ? $data['recipient_postal_code'] : null;
        $this->container['recipient_country_code'] = isset($data['recipient_country_code']) ? $data['recipient_country_code'] : null;
        $this->container['recipient_phone_home'] = isset($data['recipient_phone_home']) ? $data['recipient_phone_home'] : null;
        $this->container['recipient_phone_work'] = isset($data['recipient_phone_work']) ? $data['recipient_phone_work'] : null;
        $this->container['recipient_phone_mobile'] = isset($data['recipient_phone_mobile']) ? $data['recipient_phone_mobile'] : null;
        $this->container['recipient_fax'] = isset($data['recipient_fax']) ? $data['recipient_fax'] : null;
        $this->container['recipient_email'] = isset($data['recipient_email']) ? $data['recipient_email'] : null;
        $this->container['total_order_value'] = isset($data['total_order_value']) ? $data['total_order_value'] : null;
        $this->container['order_instructions'] = isset($data['order_instructions']) ? $data['order_instructions'] : null;
        $this->container['sending_member_code'] = isset($data['sending_member_code']) ? $data['sending_member_code'] : null;
        $this->container['sending_location'] = isset($data['sending_location']) ? $data['sending_location'] : null;
        $this->container['sending_name'] = isset($data['sending_name']) ? $data['sending_name'] : null;
        $this->container['sending_member_order_number'] = isset($data['sending_member_order_number']) ? $data['sending_member_order_number'] : null;
        $this->container['filling_member_code'] = isset($data['filling_member_code']) ? $data['filling_member_code'] : null;
        $this->container['filling_name'] = isset($data['filling_name']) ? $data['filling_name'] : null;
        $this->container['filling_location'] = isset($data['filling_location']) ? $data['filling_location'] : null;
        $this->container['clearing_period'] = isset($data['clearing_period']) ? $data['clearing_period'] : null;
        $this->container['order_items'] = isset($data['order_items']) ? $data['order_items'] : null;
        $this->container['floristgate_number'] = isset($data['floristgate_number']) ? $data['floristgate_number'] : null;
        $this->container['message_status'] = isset($data['message_status']) ? $data['message_status'] : null;
        $this->container['created_date'] = isset($data['created_date']) ? $data['created_date'] : null;
        $this->container['modified_date'] = isset($data['modified_date']) ? $data['modified_date'] : null;
        $this->container['confirmed_date'] = isset($data['confirmed_date']) ? $data['confirmed_date'] : null;
        $this->container['from_unit_id'] = isset($data['from_unit_id']) ? $data['from_unit_id'] : null;
        $this->container['from_unit_message_id'] = isset($data['from_unit_message_id']) ? $data['from_unit_message_id'] : null;
        $this->container['to_unit_id'] = isset($data['to_unit_id']) ? $data['to_unit_id'] : null;
        $this->container['to_unit_message_id'] = isset($data['to_unit_message_id']) ? $data['to_unit_message_id'] : null;
        $this->container['operator'] = isset($data['operator']) ? $data['operator'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getOrderTypeAllowableValues();
        if (!is_null($this->container['order_type']) && !in_array($this->container['order_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'order_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getOrderStateAllowableValues();
        if (!is_null($this->container['order_state']) && !in_array($this->container['order_state'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'order_state', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getOccasionAllowableValues();
        if (!is_null($this->container['occasion']) && !in_array($this->container['occasion'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'occasion', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMessageStatusAllowableValues();
        if (!is_null($this->container['message_status']) && !in_array($this->container['message_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'message_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getPriorityAllowableValues();
        if (!is_null($this->container['priority']) && !in_array($this->container['priority'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'priority', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets delivery_date
     *
     * @return \DateTime
     */
    public function getDeliveryDate()
    {
        return $this->container['delivery_date'];
    }

    /**
     * Sets delivery_date
     *
     * @param \DateTime $delivery_date delivery_date
     *
     * @return $this
     */
    public function setDeliveryDate($delivery_date)
    {
        $this->container['delivery_date'] = $delivery_date;

        return $this;
    }

    /**
     * Gets sending_unit_order_number
     *
     * @return string
     */
    public function getSendingUnitOrderNumber()
    {
        return $this->container['sending_unit_order_number'];
    }

    /**
     * Sets sending_unit_order_number
     *
     * @param string $sending_unit_order_number sending_unit_order_number
     *
     * @return $this
     */
    public function setSendingUnitOrderNumber($sending_unit_order_number)
    {
        $this->container['sending_unit_order_number'] = $sending_unit_order_number;

        return $this;
    }

    /**
     * Gets order_type
     *
     * @return int
     */
    public function getOrderType()
    {
        return $this->container['order_type'];
    }

    /**
     * Sets order_type
     *
     * @param int $order_type order_type
     *
     * @return $this
     */
    public function setOrderType($order_type)
    {
        $allowedValues = $this->getOrderTypeAllowableValues();
        if (!is_null($order_type) && !in_array($order_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'order_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['order_type'] = $order_type;

        return $this;
    }

    /**
     * Gets order_state
     *
     * @return int
     */
    public function getOrderState()
    {
        return $this->container['order_state'];
    }

    /**
     * Sets order_state
     *
     * @param int $order_state order_state
     *
     * @return $this
     */
    public function setOrderState($order_state)
    {
        $allowedValues = $this->getOrderStateAllowableValues();
        if (!is_null($order_state) && !in_array($order_state, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'order_state', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['order_state'] = $order_state;

        return $this;
    }

    /**
     * Gets occasion
     *
     * @return int
     */
    public function getOccasion()
    {
        return $this->container['occasion'];
    }

    /**
     * Sets occasion
     *
     * @param int $occasion occasion
     *
     * @return $this
     */
    public function setOccasion($occasion)
    {
        $allowedValues = $this->getOccasionAllowableValues();
        if (!is_null($occasion) && !in_array($occasion, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'occasion', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['occasion'] = $occasion;

        return $this;
    }

    /**
     * Gets sender_company
     *
     * @return string
     */
    public function getSenderCompany()
    {
        return $this->container['sender_company'];
    }

    /**
     * Sets sender_company
     *
     * @param string $sender_company sender_company
     *
     * @return $this
     */
    public function setSenderCompany($sender_company)
    {
        $this->container['sender_company'] = $sender_company;

        return $this;
    }

    /**
     * Gets sender_name
     *
     * @return string
     */
    public function getSenderName()
    {
        return $this->container['sender_name'];
    }

    /**
     * Sets sender_name
     *
     * @param string $sender_name sender_name
     *
     * @return $this
     */
    public function setSenderName($sender_name)
    {
        $this->container['sender_name'] = $sender_name;

        return $this;
    }

    /**
     * Gets sender_address
     *
     * @return string
     */
    public function getSenderAddress()
    {
        return $this->container['sender_address'];
    }

    /**
     * Sets sender_address
     *
     * @param string $sender_address sender_address
     *
     * @return $this
     */
    public function setSenderAddress($sender_address)
    {
        $this->container['sender_address'] = $sender_address;

        return $this;
    }

    /**
     * Gets sender_city
     *
     * @return string
     */
    public function getSenderCity()
    {
        return $this->container['sender_city'];
    }

    /**
     * Sets sender_city
     *
     * @param string $sender_city sender_city
     *
     * @return $this
     */
    public function setSenderCity($sender_city)
    {
        $this->container['sender_city'] = $sender_city;

        return $this;
    }

    /**
     * Gets sender_region
     *
     * @return string
     */
    public function getSenderRegion()
    {
        return $this->container['sender_region'];
    }

    /**
     * Sets sender_region
     *
     * @param string $sender_region sender_region
     *
     * @return $this
     */
    public function setSenderRegion($sender_region)
    {
        $this->container['sender_region'] = $sender_region;

        return $this;
    }

    /**
     * Gets sender_postal_code
     *
     * @return string
     */
    public function getSenderPostalCode()
    {
        return $this->container['sender_postal_code'];
    }

    /**
     * Sets sender_postal_code
     *
     * @param string $sender_postal_code sender_postal_code
     *
     * @return $this
     */
    public function setSenderPostalCode($sender_postal_code)
    {
        $this->container['sender_postal_code'] = $sender_postal_code;

        return $this;
    }

    /**
     * Gets sender_country_code
     *
     * @return string
     */
    public function getSenderCountryCode()
    {
        return $this->container['sender_country_code'];
    }

    /**
     * Sets sender_country_code
     *
     * @param string $sender_country_code sender_country_code
     *
     * @return $this
     */
    public function setSenderCountryCode($sender_country_code)
    {
        $this->container['sender_country_code'] = $sender_country_code;

        return $this;
    }

    /**
     * Gets sender_phone_home
     *
     * @return string
     */
    public function getSenderPhoneHome()
    {
        return $this->container['sender_phone_home'];
    }

    /**
     * Sets sender_phone_home
     *
     * @param string $sender_phone_home sender_phone_home
     *
     * @return $this
     */
    public function setSenderPhoneHome($sender_phone_home)
    {
        $this->container['sender_phone_home'] = $sender_phone_home;

        return $this;
    }

    /**
     * Gets sender_phone_work
     *
     * @return string
     */
    public function getSenderPhoneWork()
    {
        return $this->container['sender_phone_work'];
    }

    /**
     * Sets sender_phone_work
     *
     * @param string $sender_phone_work sender_phone_work
     *
     * @return $this
     */
    public function setSenderPhoneWork($sender_phone_work)
    {
        $this->container['sender_phone_work'] = $sender_phone_work;

        return $this;
    }

    /**
     * Gets sender_phone_mobile
     *
     * @return string
     */
    public function getSenderPhoneMobile()
    {
        return $this->container['sender_phone_mobile'];
    }

    /**
     * Sets sender_phone_mobile
     *
     * @param string $sender_phone_mobile sender_phone_mobile
     *
     * @return $this
     */
    public function setSenderPhoneMobile($sender_phone_mobile)
    {
        $this->container['sender_phone_mobile'] = $sender_phone_mobile;

        return $this;
    }

    /**
     * Gets sender_fax
     *
     * @return string
     */
    public function getSenderFax()
    {
        return $this->container['sender_fax'];
    }

    /**
     * Sets sender_fax
     *
     * @param string $sender_fax sender_fax
     *
     * @return $this
     */
    public function setSenderFax($sender_fax)
    {
        $this->container['sender_fax'] = $sender_fax;

        return $this;
    }

    /**
     * Gets sender_email1
     *
     * @return string
     */
    public function getSenderEmail1()
    {
        return $this->container['sender_email1'];
    }

    /**
     * Sets sender_email1
     *
     * @param string $sender_email1 sender_email1
     *
     * @return $this
     */
    public function setSenderEmail1($sender_email1)
    {
        $this->container['sender_email1'] = $sender_email1;

        return $this;
    }

    /**
     * Gets sender_email2
     *
     * @return string
     */
    public function getSenderEmail2()
    {
        return $this->container['sender_email2'];
    }

    /**
     * Sets sender_email2
     *
     * @param string $sender_email2 sender_email2
     *
     * @return $this
     */
    public function setSenderEmail2($sender_email2)
    {
        $this->container['sender_email2'] = $sender_email2;

        return $this;
    }

    /**
     * Gets recipient_title
     *
     * @return string
     */
    public function getRecipientTitle()
    {
        return $this->container['recipient_title'];
    }

    /**
     * Sets recipient_title
     *
     * @param string $recipient_title recipient_title
     *
     * @return $this
     */
    public function setRecipientTitle($recipient_title)
    {
        $this->container['recipient_title'] = $recipient_title;

        return $this;
    }

    /**
     * Gets recipient_name
     *
     * @return string
     */
    public function getRecipientName()
    {
        return $this->container['recipient_name'];
    }

    /**
     * Sets recipient_name
     *
     * @param string $recipient_name recipient_name
     *
     * @return $this
     */
    public function setRecipientName($recipient_name)
    {
        $this->container['recipient_name'] = $recipient_name;

        return $this;
    }

    /**
     * Gets recipient_address
     *
     * @return string
     */
    public function getRecipientAddress()
    {
        return $this->container['recipient_address'];
    }

    /**
     * Sets recipient_address
     *
     * @param string $recipient_address recipient_address
     *
     * @return $this
     */
    public function setRecipientAddress($recipient_address)
    {
        $this->container['recipient_address'] = $recipient_address;

        return $this;
    }

    /**
     * Gets recipient_city
     *
     * @return string
     */
    public function getRecipientCity()
    {
        return $this->container['recipient_city'];
    }

    /**
     * Sets recipient_city
     *
     * @param string $recipient_city recipient_city
     *
     * @return $this
     */
    public function setRecipientCity($recipient_city)
    {
        $this->container['recipient_city'] = $recipient_city;

        return $this;
    }

    /**
     * Gets recipient_region
     *
     * @return string
     */
    public function getRecipientRegion()
    {
        return $this->container['recipient_region'];
    }

    /**
     * Sets recipient_region
     *
     * @param string $recipient_region recipient_region
     *
     * @return $this
     */
    public function setRecipientRegion($recipient_region)
    {
        $this->container['recipient_region'] = $recipient_region;

        return $this;
    }

    /**
     * Gets recipient_postal_code
     *
     * @return string
     */
    public function getRecipientPostalCode()
    {
        return $this->container['recipient_postal_code'];
    }

    /**
     * Sets recipient_postal_code
     *
     * @param string $recipient_postal_code recipient_postal_code
     *
     * @return $this
     */
    public function setRecipientPostalCode($recipient_postal_code)
    {
        $this->container['recipient_postal_code'] = $recipient_postal_code;

        return $this;
    }

    /**
     * Gets recipient_country_code
     *
     * @return string
     */
    public function getRecipientCountryCode()
    {
        return $this->container['recipient_country_code'];
    }

    /**
     * Sets recipient_country_code
     *
     * @param string $recipient_country_code recipient_country_code
     *
     * @return $this
     */
    public function setRecipientCountryCode($recipient_country_code)
    {
        $this->container['recipient_country_code'] = $recipient_country_code;

        return $this;
    }

    /**
     * Gets recipient_phone_home
     *
     * @return string
     */
    public function getRecipientPhoneHome()
    {
        return $this->container['recipient_phone_home'];
    }

    /**
     * Sets recipient_phone_home
     *
     * @param string $recipient_phone_home recipient_phone_home
     *
     * @return $this
     */
    public function setRecipientPhoneHome($recipient_phone_home)
    {
        $this->container['recipient_phone_home'] = $recipient_phone_home;

        return $this;
    }

    /**
     * Gets recipient_phone_work
     *
     * @return string
     */
    public function getRecipientPhoneWork()
    {
        return $this->container['recipient_phone_work'];
    }

    /**
     * Sets recipient_phone_work
     *
     * @param string $recipient_phone_work recipient_phone_work
     *
     * @return $this
     */
    public function setRecipientPhoneWork($recipient_phone_work)
    {
        $this->container['recipient_phone_work'] = $recipient_phone_work;

        return $this;
    }

    /**
     * Gets recipient_phone_mobile
     *
     * @return string
     */
    public function getRecipientPhoneMobile()
    {
        return $this->container['recipient_phone_mobile'];
    }

    /**
     * Sets recipient_phone_mobile
     *
     * @param string $recipient_phone_mobile recipient_phone_mobile
     *
     * @return $this
     */
    public function setRecipientPhoneMobile($recipient_phone_mobile)
    {
        $this->container['recipient_phone_mobile'] = $recipient_phone_mobile;

        return $this;
    }

    /**
     * Gets recipient_fax
     *
     * @return string
     */
    public function getRecipientFax()
    {
        return $this->container['recipient_fax'];
    }

    /**
     * Sets recipient_fax
     *
     * @param string $recipient_fax recipient_fax
     *
     * @return $this
     */
    public function setRecipientFax($recipient_fax)
    {
        $this->container['recipient_fax'] = $recipient_fax;

        return $this;
    }

    /**
     * Gets recipient_email
     *
     * @return string
     */
    public function getRecipientEmail()
    {
        return $this->container['recipient_email'];
    }

    /**
     * Sets recipient_email
     *
     * @param string $recipient_email recipient_email
     *
     * @return $this
     */
    public function setRecipientEmail($recipient_email)
    {
        $this->container['recipient_email'] = $recipient_email;

        return $this;
    }

    /**
     * Gets total_order_value
     *
     * @return double
     */
    public function getTotalOrderValue()
    {
        return $this->container['total_order_value'];
    }

    /**
     * Sets total_order_value
     *
     * @param double $total_order_value total_order_value
     *
     * @return $this
     */
    public function setTotalOrderValue($total_order_value)
    {
        $this->container['total_order_value'] = $total_order_value;

        return $this;
    }

    /**
     * Gets order_instructions
     *
     * @return string
     */
    public function getOrderInstructions()
    {
        return $this->container['order_instructions'];
    }

    /**
     * Sets order_instructions
     *
     * @param string $order_instructions order_instructions
     *
     * @return $this
     */
    public function setOrderInstructions($order_instructions)
    {
        $this->container['order_instructions'] = $order_instructions;

        return $this;
    }

    /**
     * Gets sending_member_code
     *
     * @return string
     */
    public function getSendingMemberCode()
    {
        return $this->container['sending_member_code'];
    }

    /**
     * Sets sending_member_code
     *
     * @param string $sending_member_code sending_member_code
     *
     * @return $this
     */
    public function setSendingMemberCode($sending_member_code)
    {
        $this->container['sending_member_code'] = $sending_member_code;

        return $this;
    }

    /**
     * Gets sending_location
     *
     * @return string
     */
    public function getSendingLocation()
    {
        return $this->container['sending_location'];
    }

    /**
     * Sets sending_location
     *
     * @param string $sending_location sending_location
     *
     * @return $this
     */
    public function setSendingLocation($sending_location)
    {
        $this->container['sending_location'] = $sending_location;

        return $this;
    }

    /**
     * Gets sending_name
     *
     * @return string
     */
    public function getSendingName()
    {
        return $this->container['sending_name'];
    }

    /**
     * Sets sending_name
     *
     * @param string $sending_name sending_name
     *
     * @return $this
     */
    public function setSendingName($sending_name)
    {
        $this->container['sending_name'] = $sending_name;

        return $this;
    }

    /**
     * Gets sending_member_order_number
     *
     * @return string
     */
    public function getSendingMemberOrderNumber()
    {
        return $this->container['sending_member_order_number'];
    }

    /**
     * Sets sending_member_order_number
     *
     * @param string $sending_member_order_number sending_member_order_number
     *
     * @return $this
     */
    public function setSendingMemberOrderNumber($sending_member_order_number)
    {
        $this->container['sending_member_order_number'] = $sending_member_order_number;

        return $this;
    }

    /**
     * Gets filling_member_code
     *
     * @return string
     */
    public function getFillingMemberCode()
    {
        return $this->container['filling_member_code'];
    }

    /**
     * Sets filling_member_code
     *
     * @param string $filling_member_code filling_member_code
     *
     * @return $this
     */
    public function setFillingMemberCode($filling_member_code)
    {
        $this->container['filling_member_code'] = $filling_member_code;

        return $this;
    }

    /**
     * Gets filling_name
     *
     * @return string
     */
    public function getFillingName()
    {
        return $this->container['filling_name'];
    }

    /**
     * Sets filling_name
     *
     * @param string $filling_name filling_name
     *
     * @return $this
     */
    public function setFillingName($filling_name)
    {
        $this->container['filling_name'] = $filling_name;

        return $this;
    }

    /**
     * Gets filling_location
     *
     * @return string
     */
    public function getFillingLocation()
    {
        return $this->container['filling_location'];
    }

    /**
     * Sets filling_location
     *
     * @param string $filling_location filling_location
     *
     * @return $this
     */
    public function setFillingLocation($filling_location)
    {
        $this->container['filling_location'] = $filling_location;

        return $this;
    }

    /**
     * Gets clearing_period
     *
     * @return string
     */
    public function getClearingPeriod()
    {
        return $this->container['clearing_period'];
    }

    /**
     * Sets clearing_period
     *
     * @param string $clearing_period clearing_period
     *
     * @return $this
     */
    public function setClearingPeriod($clearing_period)
    {
        $this->container['clearing_period'] = $clearing_period;

        return $this;
    }

    /**
     * Gets order_items
     *
     * @return \Swagger\Client\Model\OrderItem[]
     */
    public function getOrderItems()
    {
        return $this->container['order_items'];
    }

    /**
     * Sets order_items
     *
     * @param \Swagger\Client\Model\OrderItem[] $order_items order_items
     *
     * @return $this
     */
    public function setOrderItems($order_items)
    {
        $this->container['order_items'] = $order_items;

        return $this;
    }

    /**
     * Gets floristgate_number
     *
     * @return int
     */
    public function getFloristgateNumber()
    {
        return $this->container['floristgate_number'];
    }

    /**
     * Sets floristgate_number
     *
     * @param int $floristgate_number floristgate_number
     *
     * @return $this
     */
    public function setFloristgateNumber($floristgate_number)
    {
        $this->container['floristgate_number'] = $floristgate_number;

        return $this;
    }

    /**
     * Gets message_status
     *
     * @return int
     */
    public function getMessageStatus()
    {
        return $this->container['message_status'];
    }

    /**
     * Sets message_status
     *
     * @param int $message_status message_status
     *
     * @return $this
     */
    public function setMessageStatus($message_status)
    {
        $allowedValues = $this->getMessageStatusAllowableValues();
        if (!is_null($message_status) && !in_array($message_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'message_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['message_status'] = $message_status;

        return $this;
    }

    /**
     * Gets created_date
     *
     * @return \DateTime
     */
    public function getCreatedDate()
    {
        return $this->container['created_date'];
    }

    /**
     * Sets created_date
     *
     * @param \DateTime $created_date created_date
     *
     * @return $this
     */
    public function setCreatedDate($created_date)
    {
        $this->container['created_date'] = $created_date;

        return $this;
    }

    /**
     * Gets modified_date
     *
     * @return \DateTime
     */
    public function getModifiedDate()
    {
        return $this->container['modified_date'];
    }

    /**
     * Sets modified_date
     *
     * @param \DateTime $modified_date modified_date
     *
     * @return $this
     */
    public function setModifiedDate($modified_date)
    {
        $this->container['modified_date'] = $modified_date;

        return $this;
    }

    /**
     * Gets confirmed_date
     *
     * @return \DateTime
     */
    public function getConfirmedDate()
    {
        return $this->container['confirmed_date'];
    }

    /**
     * Sets confirmed_date
     *
     * @param \DateTime $confirmed_date confirmed_date
     *
     * @return $this
     */
    public function setConfirmedDate($confirmed_date)
    {
        $this->container['confirmed_date'] = $confirmed_date;

        return $this;
    }

    /**
     * Gets from_unit_id
     *
     * @return int
     */
    public function getFromUnitId()
    {
        return $this->container['from_unit_id'];
    }

    /**
     * Sets from_unit_id
     *
     * @param int $from_unit_id from_unit_id
     *
     * @return $this
     */
    public function setFromUnitId($from_unit_id)
    {
        $this->container['from_unit_id'] = $from_unit_id;

        return $this;
    }

    /**
     * Gets from_unit_message_id
     *
     * @return int
     */
    public function getFromUnitMessageId()
    {
        return $this->container['from_unit_message_id'];
    }

    /**
     * Sets from_unit_message_id
     *
     * @param int $from_unit_message_id from_unit_message_id
     *
     * @return $this
     */
    public function setFromUnitMessageId($from_unit_message_id)
    {
        $this->container['from_unit_message_id'] = $from_unit_message_id;

        return $this;
    }

    /**
     * Gets to_unit_id
     *
     * @return int
     */
    public function getToUnitId()
    {
        return $this->container['to_unit_id'];
    }

    /**
     * Sets to_unit_id
     *
     * @param int $to_unit_id to_unit_id
     *
     * @return $this
     */
    public function setToUnitId($to_unit_id)
    {
        $this->container['to_unit_id'] = $to_unit_id;

        return $this;
    }

    /**
     * Gets to_unit_message_id
     *
     * @return int
     */
    public function getToUnitMessageId()
    {
        return $this->container['to_unit_message_id'];
    }

    /**
     * Sets to_unit_message_id
     *
     * @param int $to_unit_message_id to_unit_message_id
     *
     * @return $this
     */
    public function setToUnitMessageId($to_unit_message_id)
    {
        $this->container['to_unit_message_id'] = $to_unit_message_id;

        return $this;
    }

    /**
     * Gets operator
     *
     * @return string
     */
    public function getOperator()
    {
        return $this->container['operator'];
    }

    /**
     * Sets operator
     *
     * @param string $operator operator
     *
     * @return $this
     */
    public function setOperator($operator)
    {
        $this->container['operator'] = $operator;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return int
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param int $priority priority
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $allowedValues = $this->getPriorityAllowableValues();
        if (!is_null($priority) && !in_array($priority, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'priority', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['priority'] = $priority;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


