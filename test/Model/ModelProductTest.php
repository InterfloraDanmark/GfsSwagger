<?php
/**
 * ModelProductTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swan API v4
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * ModelProductTest Class Doc Comment
 *
 * @category    Class
 * @description ModelProduct
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ModelProductTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ModelProduct"
     */
    public function testModelProduct()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "country_code"
     */
    public function testPropertyCountryCode()
    {
    }

    /**
     * Test attribute "intercat_code"
     */
    public function testPropertyIntercatCode()
    {
    }

    /**
     * Test attribute "internal_name"
     */
    public function testPropertyInternalName()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "internal_description"
     */
    public function testPropertyInternalDescription()
    {
    }

    /**
     * Test attribute "short_description"
     */
    public function testPropertyShortDescription()
    {
    }

    /**
     * Test attribute "ordering"
     */
    public function testPropertyOrdering()
    {
    }

    /**
     * Test attribute "long_description"
     */
    public function testPropertyLongDescription()
    {
    }

    /**
     * Test attribute "min_price_images"
     */
    public function testPropertyMinPriceImages()
    {
    }

    /**
     * Test attribute "mid_price_images"
     */
    public function testPropertyMidPriceImages()
    {
    }

    /**
     * Test attribute "max_price_images"
     */
    public function testPropertyMaxPriceImages()
    {
    }

    /**
     * Test attribute "availabilities"
     */
    public function testPropertyAvailabilities()
    {
    }

    /**
     * Test attribute "peak_periods"
     */
    public function testPropertyPeakPeriods()
    {
    }

    /**
     * Test attribute "product_type"
     */
    public function testPropertyProductType()
    {
    }

    /**
     * Test attribute "product_categories"
     */
    public function testPropertyProductCategories()
    {
    }

    /**
     * Test attribute "product_types_addon"
     */
    public function testPropertyProductTypesAddon()
    {
    }

    /**
     * Test attribute "is_add_on"
     */
    public function testPropertyIsAddOn()
    {
    }

    /**
     * Test attribute "is_generic"
     */
    public function testPropertyIsGeneric()
    {
    }

    /**
     * Test attribute "delivery_delay"
     */
    public function testPropertyDeliveryDelay()
    {
    }

    /**
     * Test attribute "last_update"
     */
    public function testPropertyLastUpdate()
    {
    }

    /**
     * Test attribute "created_date"
     */
    public function testPropertyCreatedDate()
    {
    }

    /**
     * Test attribute "removed_date"
     */
    public function testPropertyRemovedDate()
    {
    }

    /**
     * Test attribute "date_to_be_removed"
     */
    public function testPropertyDateToBeRemoved()
    {
    }
}
